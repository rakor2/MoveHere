{
    "IMGUI Window": {
        "prefix": "igaddwindow",
        "scope": "lua",
        "body": [
            "local ${1:window} = Ext.IMGUI.NewWindow(\"${2:Window Title}\")",
            "${1:window}.Open = ${3:true}",
            "${1:window}.Visible = ${4:true}",
            "${1:window}.Closeable = ${5:true}",
            "${1:window}.IDContext = \"${6:UniqueWindowID}\"",
            "${1:window}.AlwaysAutoResize = ${7:false}",
            "",
            "${1:window}.OnClose = function()",
            "    ${1:window}.Open = false",
            "    return true",
            "end",
            "$0"
        ],
        "description": "Creates a new IMGUI window"
    },
    
    "IMGUI TabBar": {
        "prefix": "igaddtabbar",
        "scope": "lua",
        "body": [
            "local ${1:tabBar} = ${2:parent}:AddTabBar(\"${3:TabBar Name}\")",
            "${1:tabBar}.IDContext = \"${4:UniqueTabBarID}\"",
            "${1:tabBar}.Visible = ${5:true}",
            "",
            "-- Add tab items",
            "local ${6:tabItem1} = ${1:tabBar}:AddTabItem(\"${7:Tab 1}\")",
            "${6:tabItem1}.IDContext = \"${8:UniqueTabItem1ID}\"",
            "${6:tabItem1}.Visible = true",
            "$0"
        ],
        "description": "Adds a tab bar with a tab item to an IMGUI parent element"
    },
    
    "IMGUI Table": {
        "prefix": "igaddtable",
        "scope": "lua",
        "body": [
            "local ${1:table} = ${2:parent}:AddTable(\"${3:Table Name}\", ${4:3})",
            "${1:table}.IDContext = \"${5:UniqueTableID}\"",
            "${1:table}.Visible = ${6:true}",
            "${1:table}.Columns = ${4:3}",
            "${1:table}.FreezeRows = ${7:0}",
            "${1:table}.FreezeCols = ${8:0}",
            "${1:table}.ShowHeader = ${9:true}",
            "${1:table}.AngledHeader = ${10:false}",
            "${1:table}.OnSortChanged = function()",
            "    ${11:-- Sort changed code here}",
            "end",
            "",
            "-- Add columns",
            "${1:table}:AddColumn(\"${12:Column 1}\", nil, nil)",
            "${1:table}:AddColumn(\"${13:Column 2}\", nil, nil)",
            "${1:table}:AddColumn(\"${14:Column 3}\", nil, nil)",
            "",
            "-- Add rows",
            "local row = ${1:table}:AddRow()",
            "local cell1 = row:AddCell()",
            "local cell2 = row:AddCell()",
            "local cell3 = row:AddCell()",
            "$0"
        ],
        "description": "Adds a table to an IMGUI parent element"
    },
    
    "IMGUI Tree": {
        "prefix": "igaddtree",
        "scope": "lua",
        "body": [
            "local ${1:tree} = ${2:parent}:AddTree(\"${3:Tree Name}\")",
            "${1:tree}.IDContext = \"${4:UniqueTreeID}\"",
            "${1:tree}.Visible = ${5:true}",
            "${1:tree}.OnClick = function()",
            "    ${6:-- Click code here}",
            "end",
            "${1:tree}.OnExpand = function()",
            "    ${7:-- Expand code here}",
            "end",
            "${1:tree}.OnCollapse = function()",
            "    ${8:-- Collapse code here}",
            "end",
            "$0"
        ],
        "description": "Adds a tree node to an IMGUI parent element"
    },
    
    "IMGUI Button": {
        "prefix": "igaddbutton",
        "scope": "lua",
        "body": [
            "local ${1:button} = ${2:parent}:AddButton(\"${3:Button Text}\")",
            "${1:button}.IDContext = \"${4:UniqueButtonID}\"",
            "${1:button}.SameLine = ${5:false}",
            "${1:button}.OnClick = function()",
            "    ${6:-- Button click code here}",
            "end",
            "$0"
        ],
        "description": "Adds a button to an IMGUI parent element"
    },
    
    "IMGUI Checkbox": {
        "prefix": "igaddcheckbox",
        "scope": "lua",
        "body": [
            "local ${1:checkbox} = ${2:parent}:AddCheckbox(\"${3:Checkbox Label}\")",
            "${1:checkbox}.IDContext = \"${4:UniqueCheckboxID}\"",
            "${1:checkbox}.Checked = ${5:false}",
            "${1:checkbox}.SameLine = ${6:false}",
            "${1:checkbox}.OnChange = function()",
            "    if ${1:checkbox}.Checked then",
            "    print(${1:checkbox}.Checked)",
            "        ${7:-- Checked code}",
            "    else",
            "    print(${1:checkbox}.Checked)",
            "        ${8:-- Unchecked code}",
            "    end",
            "end",
            "$0"
        ],
        "description": "Adds a checkbox to an IMGUI parent element"
    },
    
    "IMGUI InputText": {
        "prefix": "igaddinputtext",
        "scope": "lua",
        "body": [
            "local ${1:inputText} = ${2:parent}:AddInputText(\"${3:Label}\", \"${4:Default Text}\")",
            "${1:inputText}.IDContext = \"${5:UniqueInputID}\"",
            "${1:inputText}.Hint = \"${6:Enter text here...}\"",
            "${1:inputText}.SameLine = ${7:false}",
            "${1:inputText}.OnChange = function()",
            "    print(${1:inputText}.Text)",
            "    ${8:-- Text change code here}",
            "end",
            "$0"
        ],
        "description": "Adds an input text field to an IMGUI parent element"
    },
    
    "IMGUI Combo": {
        "prefix": "igaddcombo",
        "scope": "lua",
        "body": [
            "local ${1:combo} = ${2:parent}:AddCombo(\"${3:Label}\")",
            "${1:combo}.IDContext = \"${4:UniqueComboID}\"",
            "${1:combo}.Options = {${5:\"Option1\", \"Option2\", \"Option3\"}}",
            "${1:combo}.SelectedIndex = ${6:0}",
            "${1:combo}.HeightLargest = ${7:true}",
            "${1:combo}.SameLine = ${8:false}",
            "${1:combo}.OnChange = function()",
            "    print(${1:combo}.Options[${1:combo}.SelectedIndex + 1])",
            "    ${9:-- Combo change code here}",
            "end",
            "$0"
        ],
        "description": "Adds a combo box to an IMGUI parent element"
    },
    
    "IMGUI Slider": {
        "prefix": "igaddslider",
        "scope": "lua",
        "body": [
            "local ${1:slider} = ${2:parent}:AddSlider(\"${3:Label}\", ${4:0}, ${5:0}, ${6:100}, ${7:1}) --default, min, max, step",
            "${1:slider}.IDContext = \"${8:UniqueSliderID}\"",
            "${1:slider}.SameLine = ${9:false}",
            "${1:slider}.Components = 1",
            "${1:slider}.Value = 0, 0, 0, 0}",
            "${1:slider}.Min = 0, 0, 0, 0}",
            "${1:slider}.Max = 100, 100, 100, 100}",
            "${1:slider}.OnChange = function()",
            "    local value = ${1:slider}.Value[1]",
            "    print(value)",
            "    ${104:-- Slider change code here}",
            "end",
            "$0"
        ],
        "description": "Adds a slider to an IMGUI parent element"
    },
    
    "IMGUI ColorPicker": {
        "prefix": "igaddcolorpicker",
        "scope": "lua",
        "body": [
            "local ${1:colorPicker} = ${2:parent}:AddColorPicker(\"${3:Label}\")",
            "${1:colorPicker}.IDContext = \"${4:UniqueColorPickerID}\"",
            "${1:colorPicker}.Color = {${5:1.0}, ${6:1.0}, ${7:1.0}, ${8:1.0}}",
            "${1:colorPicker}.NoAlpha = ${9:true}",
            "${1:colorPicker}.Float = ${10:true}",
            "${1:colorPicker}.PickerHueWheel = ${11:false}",
            "${1:colorPicker}.InputRGB = ${12:true}",
            "${1:colorPicker}.DisplayHex = ${13:true}",
            "${1:colorPicker}.OnChange = function()",
            "    print(${1:colorPicker}.Color[1], ${1:colorPicker}.Color[2], ${1:colorPicker}.Color[3], ${1:colorPicker}.Color[4])",
            "    ${14:-- Color change code here}",
            "end",
            "$0"
        ],
        "description": "Adds a color picker to an IMGUI parent element"
    },
    
    "IMGUI ColorEdit": {
        "prefix": "igaddcoloredit",
        "scope": "lua",
        "body": [
            "local ${1:colorEdit} = ${2:parent}:AddColorEdit(\"${3:Label}\")",
            "${1:colorEdit}.IDContext = \"${4:UniqueColorEditID}\"",
            "${1:colorEdit}.Color = {${5:1.0}, ${6:1.0}, ${7:1.0}, ${8:1.0}}",
            "${1:colorEdit}.NoAlpha = ${9:true}",
            "${1:colorEdit}.Float = ${10:true}",
            "${1:colorEdit}.OnChange = function()",
            "    print(${1:colorEdit}.Color[1], ${1:colorEdit}.Color[2], ${1:colorEdit}.Color[3], ${1:colorEdit}.Color[4])",
            "    ${11:-- Color change code here}",
            "end",
            "$0"
        ],
        "description": "Adds a color editor to an IMGUI parent element"
    },
    
    "IMGUI Text": {
        "prefix": "igaddtext",
        "scope": "lua",
        "body": [
            "local ${1:text} = ${2:parent}:AddText(\"${3:Text content}\")",
            "${1:text}.SameLine = ${5:false}",
            "$0"
        ],
        "description": "Adds a text element to an IMGUI parent element"
    },
    
    "IMGUI BulletText": {
        "prefix": "igaddbullettext",
        "scope": "lua",
        "body": [
            "local ${1:bulletText} = ${2:parent}:AddBulletText(\"${3:Bullet text content}\")",
            "${1:bulletText}.SameLine = ${5:false}",
            "$0"
        ],
        "description": "Adds a bullet text element to an IMGUI parent element"
    },
    
    "IMGUI SeparatorText": {
        "prefix": "igaddseparatortext",
        "scope": "lua",
        "body": [
            "local ${1:separatorText} = ${2:parent}:AddSeparatorText(\"${3:Separator text}\")",
            "$0"
        ],
        "description": "Adds a separator with text to an IMGUI parent element"
    },
    
    "IMGUI Separator": {
        "prefix": "igaddseparator",
        "scope": "lua",
        "body": [
            "local ${1:separator} = ${2:parent}:AddSeparator()",
            "$0"
        ],
        "description": "Adds a separator line to an IMGUI parent element"
    },
    
    "IMGUI Dummy": {
        "prefix": "igadddummy",
        "scope": "lua",
        "body": [
            "local ${1:dummy} = ${2:parent}:AddDummy(${3:10}, ${4:10})",
            "${1:dummy}.IDContext = \"${5:UniqueDummyID}\"",
            "${1:dummy}.Width = ${3:10}",
            "${1:dummy}.Height = ${4:10}",
            "$0"
        ],
        "description": "Adds a dummy element with specified width and height"
    },

    "IMGUI RadioButton": {
        "prefix": "igaddradiobutton",
        "scope": "lua",
        "body": [
            "local ${1:radioButton} = ${2:parent}:AddRadioButton(\"${3:Radio Button Label}\")",
            "${1:radioButton}.IDContext = \"${4:UniqueRadioButtonID}\"",
            "${1:radioButton}.Active = ${5:false}",
            "${1:radioButton}.SameLine = ${6:false}",
            "${1:radioButton}.OnChange = function()",
            "    if ${1:radioButton}.Active then",
            "    print(${1:radioButton}.Checked)",
            "        -- Active code",
            "    else",
            "    print(${1:radioButton}.Checked)",
            "        -- Unactive code",
            "    end",
            "end",
            "$0"
        ],
        "description": "Adds a radio button to an IMGUI parent element"
    },
    
    "IMGUI DragScalar": {
        "prefix": "igadddragscalar",
        "scope": "lua",
        "body": [
            "local ${1:dragScalar} = ${2:parent}:AddDrag(\"${3:Label}\", ${4:0}, ${5:0}, ${6:100}) --default, min, max",
            "${1:dragScalar}.IDContext = \"${7:UniqueDragScalarID}\"",
            "${1:dragScalar}.SameLine = ${8:false}",
            "${1:dragScalar}.Components = 1",
            "${1:dragScalar}.Value = 0, 0, 0, 0}",
            "${1:dragScalar}.Min = 0, 0, 0, 0}",
            "${1:dragScalar}.Max = 100, 100, 100, 100}",
            "${1:dragScalar}.OnChange = function()",
            "    print(${1:dragScalar}.Value[1])",
            "    ${9:-- Drag scalar change code here}",
            "end",
            "$0"
        ],
        "description": "Adds a drag scalar to an IMGUI parent element"
    },
    
    "IMGUI DragInt": {
        "prefix": "igadddragint",
        "scope": "lua",
        "body": [
            "local ${1:dragInt} = ${2:parent}:AddDragInt(\"${3:Label}\", ${4:0}, ${5:0}, ${6:100}) --default, min, max",
            "${1:dragInt}.IDContext = \"${7:UniqueDragIntID}\"",
            "${1:dragInt}.SameLine = ${8:false}",
            "${1:dragInt}.Components = 1",
            "${1:dragInt}.Value = 0, 0, 0, 0}",
            "${1:dragInt}.Min = 0, 0, 0, 0}",
            "${1:dragInt}.Max = 100, 100, 100, 100}",
            "${1:dragInt}.OnChange = function()",
            "    print(${1:dragInt}.Value[1])",
            "    ${9:-- Drag int change code here}",
            "end",
            "$0"
        ],
        "description": "Adds a drag int to an IMGUI parent element"
    },
    
    "IMGUI SliderInt": {
        "prefix": "igaddsliderint",
        "scope": "lua",
        "body": [
            "local ${1:sliderInt} = ${2:parent}:AddSliderInt(\"${3:Label}\", ${4:0}, ${5:0}, ${6:100}, ${7:1}) --default, min, max, step",
            "${1:sliderInt}.IDContext = \"${8:UniqueSliderIntID}\"",
            "${1:sliderInt}.SameLine = ${9:false}",
            "${1:sliderInt}.Components = 1",
            "${1:sliderInt}.Value = 0, 0, 0, 0}",
            "${1:sliderInt}.Min = 0, 0, 0, 0}",
            "${1:sliderInt}.Max = 100, 100, 100, 100}",
            "${1:sliderInt}.OnChange = function()",
            "    print(${1:sliderInt}.Value[1])",
            "    ${10:-- Slider int change code here}",
            "end",
            "$0"
        ],
        "description": "Adds a slider int to an IMGUI parent element"
    },
    
    "IMGUI InputScalar": {
        "prefix": "igaddinputscalar",
        "scope": "lua",
        "body": [
            "local ${1:inputScalar} = ${2:parent}:AddInputScalar(\"${3:Label}\", ${4:0})",
            "${1:inputScalar}.IDContext = \"${5:UniqueInputScalarID}\"",
            "${1:inputScalar}.SameLine = ${6:false}",
            "${1:inputScalar}.Components = 1",
            "${1:inputScalar}.Value = {0, 0, 0, 0}",
            "${1:inputScalar}.OnChange = function()",
            "    print(${1:inputScalar}.Value[1])",
            "    ${7:-- Input scalar change code here}",
            "end",
            "$0"
        ],
        "description": "Adds an input scalar to an IMGUI parent element"
    },
    
    "IMGUI InputInt": {
        "prefix": "igaddinputint",
        "scope": "lua",
        "body": [
            "local ${1:inputInt} = ${2:parent}:AddInputInt(\"${3:Label}\", ${4:0})",
            "${1:inputInt}.IDContext = \"${5:UniqueInputIntID}\"",
            "${1:inputInt}.SameLine = ${6:false}",
            "${1:inputInt}.Components = 1",
            "${1:inputInt}.Value = {0, 0, 0, 0}",
            "${1:inputInt}.OnChange = function()",
            "    print(${1:inputInt}.Value[1])",
            "    ${7:-- Input int change code here}",
            "end",
            "$0"
        ],
        "description": "Adds an input int to an IMGUI parent element"
    },
    
    "IMGUI ProgressBar": {
        "prefix": "igaddprogressbar",
        "scope": "lua",
        "body": [
            "local ${1:progressBar} = ${2:parent}:AddProgressBar()",
            "${1:progressBar}.IDContext = \"${3:UniqueProgressBarID}\"",
            "${1:progressBar}.SameLine = ${4:false}",
            "${1:progressBar}.Value = ${5:0.5}",
            "${1:progressBar}.Size = {${6:0}, ${7:0}}",
            "${1:progressBar}.Overlay = \"${8:Progress}\"",
            "$0"
        ],
        "description": "Adds a progress bar to an IMGUI parent element"
    },
    
    "IMGUI Popup DONT KNOW HOW TO USE IT": {
        "prefix": "igaddpopup",
        "scope": "lua",
        "body": [
            "local ${1:popup} = ${2:parent}:AddPopup(\"${3:Popup Name}\")",
            "${1:popup}.IDContext = \"${4:UniquePopupID}\"",
            "${1:popup}.Open = function()",
            "    ${1:popup}:Open()",
            "end",
            "$0"
        ],
        "description": "Adds a popup to an IMGUI parent element"
    },
    
    "IMGUI ChildWindow": {
        "prefix": "igaddchildwindow",
        "scope": "lua",
        "body": [
            "local ${1:childWindow} = ${2:parent}:AddChildWindow(\"${3:Child Window}\")",
            "${1:childWindow}.IDContext = \"${4:UniqueChildWindowID}\"",
            "${1:childWindow}.Size = {${5:400}, ${6:300}}",
            "${1:childWindow}.AlwaysAutoResize = ${7:false}",
            "${1:childWindow}.AlwaysUseWindowPadding = ${8:true}",
            "${1:childWindow}.AutoResizeX = ${9:false}",
            "${1:childWindow}.AutoResizeY = ${10:false}",
            "$0"
        ],
        "description": "Adds a child window to an IMGUI parent element"
    },
    
    "IMGUI MenuBar": {
        "prefix": "igaddmenubar",
        "scope": "lua",
        "body": [
            "local ${1:menuBar} = ${2:window}:AddMainMenu()",
            "${1:menuBar}.IDContext = \"${3:UniqueMenuBarID}\"",
            "",
            "local ${4:fileMenu} = ${1:menuBar}:AddMenu(\"${5:File}\")",
            "${4:fileMenu}.IDContext = \"${6:FileMenuID}\"",
            "",
            "local ${7:openItem} = ${4:fileMenu}:AddItem(\"${8:Open}\", \"${9:Ctrl+O}\")",
            "${7:openItem}.IDContext = \"${10:OpenMenuItemID}\"",
            "${7:openItem}.OnClick = function()",
            "    ${11:-- Open menu item click code here}",
            "end",
            "$0"
        ],
        "description": "Adds a menu bar with a menu and menu item to a window"
    }
}